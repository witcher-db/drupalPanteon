<?php

/**
 * @file
 * Contains hooks for custom node events for the user_statistics module.
 */

use Drupal\user_statistics\Event\NodeCustomEvent;
use Drupal\node\NodeInterface;

/**
 * Implements hook_node_update().
 *
 * This hook is invoked whenever a node is updated.
 * Here, we check if the updated node is of the "news" content type,
 * and if so, we dispatch a custom event (NodeCustomEvent::EDIT) to
 * allow other parts of the system to react to this update.
 */
function user_statistics_node_update($node) {

  if (!empty($node->bundle()) && $node->bundle() === 'news') {
    $event = new NodeCustomEvent($node);

    $event_dispatcher = \Drupal::service('event_dispatcher');
    $event_dispatcher->dispatch($event, NodeCustomEvent::EDIT);
  }
}

/**
 * Implements hook_node_view().
 *
 * This hook is invoked whenever a node is being viewed.
 * We use it to dispatch a custom event (NodeCustomEvent::VIEW)
 * for nodes of the "news" content type, allowing other components
 * to react to node views (for example, logging or statistics).
 */
function user_statistics_node_view(array &$build, NodeInterface $node, $view_mode, $langcode) {
  if ($view_mode->bundle === 'news') {
    $event = new NodeCustomEvent($node);

    $event_dispatcher = \Drupal::service('event_dispatcher');
    $event_dispatcher->dispatch($event, NodeCustomEvent::VIEW);
  }
}
